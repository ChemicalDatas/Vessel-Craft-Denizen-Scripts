Rideable Dragon:
    type: world
    events:
        on dragon command:
        - determine passively fulfilled
        - create enderdragon Mount <player.location> save:npc
        
        - adjust <entry[npc].created_npc> "set_assignment:Mount Assignment"
        
        - mount <player>|<entry[npc].created_npc>
        
        on player animation:
        
        on player right clicks:
        - if <player.flag[dragon_control.riding_dragon]> {
            - run "Beacon Location" def:<player.location.cursor_on[<player.flag[]>]>
            }
        
        on player scrolls in hotbar:
        - if <player.flag[dragon_control.riding_dragon]> {
            - run "Beacon Location" def:<player.location.cursor_on[<player.flag[]>]>
            }
        
        
        on player enters vehicle:
        - narrate "entered <context.vehicle.name||no name>"
        - narrate "Swing your arm to move to that location!"
        - narrate "Change your selected hotbar to increase distance or decrease it."
        - if <context.vehicle.name> == mount
          flag player riding_dragon
        
        on player exits vehicle:
        - narrate "exited <context.vehicle.name||no name>"
        - if <context.vehicle.name> == mount
          flag player riding_dragon:!
        - fly <npc> destinations:<npc.location.add[0,200,0]>
        - wait d@20s
        - remove <npc>
        
    

Mount Assignment:
    type: assignment
    actions:
        on complete navigation:
        - if <npc.flag[dragon_control.last_navigation]> {
            - 
            - flag <npc> last_navigation:!
            }
        
        on click:
        - if <player.is_inside vechicle> {
            - if <player.get_vechicle> == <npc> {
                - narrate "You signal your mount to let you down"
                - fly 
                }
            }
        - narrate "You get on the mount"
        - mount <player>|<npc>