Torch Modifications:
    affected_mobs: wolf|spider|cavespider|witch
    
    success rate: 6|10
    success max: 10
    success min: 6
    duration: d@2s-15s
    light_time_update: d@5t
    
    type: world
    events:
        on player damages entity:
        - if !<player.item_in_hand.simple> == i@torch queue clear
        - define rate "<script.yaml_keys[Success Rate]>"
        - define max "<script.yaml_keys[success max]>"
        - define min "<script.yaml_keys[success min]>"
        - define roll <util.random.int[0].to[<def[max]>]>
        - if !<def[roll].is[or_more].than[<def[min]>]> queue clear
        - define duration <script.yaml_keys[duration]>
        - burn <context.entity> duration:%duration%
        
        on entity targets player:
        - if !<script.yaml_keys[affected_mobs].contains[<context.entity.name>]> queue clear
        - if !<context.reason.contains[closest_player]>                         queue clear
        - if !<player.item_in_hand.simple.is[===].to[i@torch]>                  queue clear
        - determine cancelled
        
        
        on player holds item:
        - while <player.item_in_hand.simple.is[==].to[i@torch]> {
            - wait <script.yaml_keys[light_time_update]>
            
            - define key
              <script.name>.last_light_location
              
            - define old_loc
              <player.flag[<def[key]>]||<player.location>>
              
            - define loc
              <player.location.add[0,3,0].simple.as_location>
              
            - showfake m@ender_portal
              <def[loc]>
              d:d@10m
              
            - showfake m@air
              <def[old_loc]>
              d:d@1t
              
            - flag <player>
              <def[key]>:<def[loc]>
              duration:d@10m
            
            }
            
        - showfake
          m@air
          <player.location.add[0,3,0].simple.as_location>
          d:d@1t
        
        
