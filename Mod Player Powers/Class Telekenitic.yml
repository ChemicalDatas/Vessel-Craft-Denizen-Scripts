
Class Telekinetic:
    #todo: skill level checks
    #todo: ammount checks
    #
    type: world
    
    events:
        on block falls:
        #- announce 
        #  "block has fallen at<&co>
        #  
        #  <context.location.simple>" 
        
        on m@log falls:
        #- announce 
        #  "log has fallen at<&co> <context.location.simple>" 
        
        
        on telekinetic levitate:
        #context.location
        #context.level
        # if the wrong entitys added to this flag this will cause a loop through the list untill the entitys not spawned anymore.
        - if <context.level.mod[10].is[more].than[0]> 
          queue clear
        
        - define flag "<script.name>.controlled entities"
        
        - define material 
          <context.location.material.name>
        
        - modifyblock m@air 
          <context.location>
        
        - spawn e@falling_block,<def[material]>
          <context.location>
          save:floater
        
        - push <entry[floater].spawned_entities.get[1]>
          destination:<context.location.add[0,6,0]> 
          speed:.1 s@Redirect_Flying_Entity 
          duration:d@10s


    
Redirect_Flying_Entity:
    type: task
    speed: 0t
    script:
    - define entities 
      li@
      
    - define target_location 
      <player.location.cursor_on[5].above>
      
    - define target_cuboid 
      cu@<def[target_location].add[2,2,2]>|<def[target_location].add[-2,0,-2]>
      
    - foreach <def[pushed_entities]> {
        - if !<def[value].is_spawned>
          || <def[value].time_lived.in_ticks> > <d@30s.in_ticks>
          foreach next
          
        - define cur_loc
          <def[value].location>
          
        - define distance
          <def[target_location].distance[<def[cur_loc]>]>
          
        - define random_location
          <def[target_cuboid].get_blocks[m@air].random>
          
        - push <def[value]> 
          origin:<def[cur_loc]> 
          destination:<def[target_location]> 
          speed:<def[distance].mul[.1]> 
          s@Redirect_Flying_Entity
        }
#







