#A set scripts pertaining for L-System Use

#Structure=NewStructure
#When the system finds Structure in its rule list. Replace that with NewStructure.

L-System Replace:
    type: task
    definitions: axiom|structure
    script:
    - define axiom <unescape:<def[axiom]>>
    - foreach <def[axiom]> {
        - define rule_set <def[value].split[-]>
        - define rule <def[rule_set].get[1]]>
        - define structure_element <def[rule_set].get[2]>
        
        - if <def[structure].contains[<def[rule]>]> {
            - define structure <def[structure].replace[<def[rule]>].with[<def[structure_element]>]>
            }
        }


L-System Get Area Structure:
    type: procedure
    definitions: block_list|Area|Location
    script:
    - foreach <player.location.find.blocks[<unescape:<def[block_list]>>].within[5]> {
        - define distance <def[value].distance[<player.location.below.simple>]>
        - define signature "<proc[List Append Right].context[<def[signature]|li@>|<def[distance]>]>"
        }
    - determine <def[signature].unescaped>
    

"Parse L-System Syntax":
    # + place
    # - remove
    # ! opposite
    # 
    type: procedure
    definitions: axioms
    script:
    - foreach <def[axiom]> {
        - if <def[value]> contains '+' {
            -
            }
        - if <def[value]> contains '-' {
            -
            }
        - if <def[value]> contains ')' {
            -
            }
        - if <def[value]> contains '(' {
            -
            }
        - 
            
        }













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































