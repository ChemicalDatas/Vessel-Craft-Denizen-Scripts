bigC4:
    type: world
    events:
        on player drops wiredc4:
        - foreach <player.flag[c4setup].as_list> {
            - flag <def[value]> c4_location_charges:->:<context.location>
            - flag <def[value]> c4_entity_charges:<-:<player>
            }
        
        #location attachment
        on player right clicks with c4explosives:
        - if <context.location||none> == none queue clear
        - flag player c4_location_charges:->:<context.location>
        - narrate "C4 has been set at <context.location.simple>"
        
        
        #entity attachment
        on player right clicks entity with c4explosives:
        - flag <player> <script.name>.c4_entity_charges:->:<context.entity>
        - flag <context.entity> <script.name>.c4_entity_charges:<-:<player>
        - give i@wiredc4 to:<context.entity.inventory>
        - narrate "You have placed C4 on <context.entity.name>"
        
        #blow up any flagged entity
        on player right clicks with c4dettrigger:
        - if <player.has_flag[<script.name>.c4_location_charges] run c4det
        - if <player.has_flag[<script.name>.c4_entity_charges]> run c4detonation
        - flag player c4_location_charges:!
        - flag player c4_entity_charges:!
        - determine cancelled
        
    

c4 location detonation:
    type: task
    script:
    - foreach <player.flag[C4].as_list> {
        - if <def[value]> == null queue clear
        - explode <def[value]> power:5
        }
    
    
c4 entity detonation:
    type: task
    script:
    - foreach <player.flag[C4entity].as_list> {
        - if <def[value]> == null || !<def[value].is_spawned> queue clear
        - explode <<def[value]>.location> power:5
        }
    

"c4explosives":
 type: item
 material: 405
 display name: C4
 
"c4dettrigger":
  type: item
  material: 131
  display name: 'C4_det_trigger'


"wiredc4":
 type: item
 material: m@stone_button
 display name: Wired_C4
  