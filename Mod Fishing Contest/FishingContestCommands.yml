# ~!Setup Required!~
# This requires a command block setup in a loaded chunk connected to a running clock:
# testfor @a[score_fishing_min=1] 
# (testing for everyone for a min. score of 1 (whatever you want the winning score to be))

# There needs to be a comparator running off the first command block that runs another commandblock containing:
# say @a[score_fishing_min=1] Wins the fishing Contest!
# (announce (anyone with a score equal to 1) Wins the fishing Contest!)


Fishing Contest:
    type: world
    events:
        on server start:
        - run "Clear Fishing Contest Objectives and Flags" delay:d@30s
        
        
        #fishes while fishing? Just starts fishing is better
        on player fishes while fishing:
        - if !<script.cooled_down[<player>]> queue clear
        - if !<server.flag[fishing_contest.participants].as_list.contains[<player>]> {
            - scoreboard add viewers:<player> lines: id:fishing_contest_score objective:fishing_contest score:0
            - flag server fishing_contest.participants:|:<player>
            - flag server fishing_contest.scores.<player>:0
            - announce "<magic>ii<gold><player.name> <red>is fishing! <gold>Maybe youd like to compete?"
            - announce "<magic>ii<light_purple><italic>~~~Just start fishing to join~~~"
            }
        
        - if !<server.flag[fishing_contest.participants].as_list.size.is[more].than[1]> {
            - if !<server.has_flag[fishing_contest.active]> {
                - announce "<magic>ii<gold>Fishing contest has <italic><underline><light_purple>COMMENCED!"
                - flag server fishing_contest.active duration:d@10m
                }
            }
        
        on player fishes while caught_fish:
        - if <server.has_flag[fishing_contest.active]>
          && <server.flag[fishing_contest.participants].as_list.contains[<player>]> {
            - announce "<magic>ii<gold><player.name> <reset>caught a <light_purple><context.item.formatted>!"
            - flag server fishing_contest.scores.<player>:++
            }
        
        on fishingcontest command:
        - determine passively fulfilled
        - define command <context.parsed_args.get[1]>
        - execute as_server "scoreboard objectives add fishing stat.fishCaught Fishing_Contest"
        - execute as_server "scoreboard objectives setdisplay sidebar fishing"

Clear Fishing Contest Objectives and Flags:
    type: task
    script:
    - flag server fishing_contest.active:!
    - flag server fishing_contest.participants:!
    - flag server fishing_contest.scores:!
    - scoreboard remove obj:fishing
    